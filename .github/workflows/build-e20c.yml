name: Build ImmortalWrt for Rockship E20C

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  SOC: rk3528a
  DEVICE: rockship_e20c

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 180

    steps:
    - name: Checkout ImmortalWrt
      uses: actions/checkout@v4
      with:
        repository: immortalwrt/immortalwrt
        ref: v24.10.0
        path: immortalwrt

    - name: Add Device Support
      run: |
        cd immortalwrt
        # 复制DTS文件
        wget https://raw.githubusercontent.com/radxa/kernel/stable-6.6.y/arch/arm64/boot/dts/rockchip/rk3528-e20c.dts \
          -O target/linux/rockchip/files/arch/arm64/boot/dts/rockchip/rk3528a-e20c.dts
        
        # 修改设备定义
        sed -i '/TARGET_DEVICES +=/a define Device/rockship_e20c\n  DEVICE_VENDOR := Rockship\n  DEVICE_MODEL := E20C\n  SOC := rk3528a\n  DEVICE_DTS := rockchip/rk3528a-e20c\n  IMAGE/sysupgrade.img := append-kernel | pad-to 16M | append-rootfs | pad-rootfs\nendef\nTARGET_DEVICES += rockship_e20c' \
          target/linux/rockchip/image/armv8.mk

    - name: Setup Build Environment
      uses: docker/setup-buildx-action@v2
      with:
        driver-opts: network=host

    - name: Start Docker Build
      run: |
        cd immortalwrt
        docker run --rm -it \
          -v $(pwd):/workdir \
          -v $HOME/.ccache:/root/.ccache \
          -e MAKE_JOBS=$(nproc) \
          ghcr.io/immortalwrt/sdk:rk35xx-24.10 \
          /bin/bash -c "
            ./scripts/feeds update -a &&
            ./scripts/feeds install -a &&
            make menuconfig <<< $'\n\n\n' &&
            make -j$(nproc) V=s
          "

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: immortalwrt-${{ env.DEVICE }}-${{ github.sha }}
        path: immortalwrt/bin/targets/rockchip/armv8/
        retention-days: 7

    - name: Telegram Notification
      if: always()
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          *Build ${{ job.status }}!*
          Device: ${{ env.DEVICE }}
          Commit: ${{ github.sha }}
          Logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
